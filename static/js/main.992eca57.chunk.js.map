{"version":3,"sources":["entry/dateTime.js","entry/greetQuote.js","entry/Home.js","about/ProjectCard.js","about/About.js","App.js","serviceWorker.js","index.js"],"names":["months","days","DateComp","props","state","date","time","greeting","getDate","bind","getTime","setInterval","setTimeout","n","currDate","Date","year","getFullYear","month","getMonth","dayNum","day","getDay","fullDate","this","setState","hours","getHours","minutes","getMinutes","statement","suffix","fullTime","id","align","className","React","Component","QuoteComp","quote","author","getQuote","displayQuote","fetch","then","netResp","ok","json","Error","error","console","log","message","jsonResp","response","quoteObj","quoteArr","length","Home","imgurl","getImages","setImage","event","keyCode","which","query","document","getElementById","value","target","split","forEach","word","index","array","window","open","method","mode","cache","headers","apikey","netError","jsonResponse","images","i","imageUrls","trim","randomIndex","Math","floor","random","chosenUrl","includes","replace","style","backgroundImage","type","placeholder","onKeyPress","performSearch","to","ProjectCard","Card","width","borderRadius","Body","Title","title","Subtitle","subtitle","Text","desc","Link","href","projectFactory","projectArr","About","listItems","push","getAsList","App","path","component","exact","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.992eca57.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../App.css\";\r\nconst months = [\"Jan\", \"Feb\", \"March\", \"April\", \"May\", \"June\", \"July\", \"Aug\", \"Sept\", \"Oct\", \"Nov\", \"Dec\"];\r\nconst days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\nconst getOrdinal = n => n + (n > 0 ? [\"th\", \"st\", \"nd\", \"rd\"][(n > 3 && n < 21) || n % 10 > 3 ? 0 : n % 10] : \"\");\r\n\r\nexport class DateComp extends React.Component {\r\n    getDate() {\r\n        const currDate = new Date();\r\n        //date\r\n        let year = currDate.getFullYear();\r\n        let month = months[currDate.getMonth()];\r\n        let dayNum = currDate.getDate();\r\n        let day = days[currDate.getDay()];\r\n        let fullDate = `${day}, ${month} ${getOrdinal(dayNum)}, ${year}`;\r\n        this.setState({ date: fullDate });\r\n    }\r\n\r\n    getTime() {\r\n        const currDate = new Date();\r\n        let hours = currDate.getHours();\r\n        let minutes = currDate.getMinutes();\r\n        if (minutes === 0) {\r\n            minutes = \"00\";\r\n        } else if (minutes < 10) {\r\n            minutes = `0${minutes}`;\r\n        }\r\n\r\n        let statement = \"hmm\";\r\n        if (hours >= 0 && hours < 12) {\r\n            statement = \"Good Morning\";\r\n        } else if (hours >= 12 && hours < 17) {\r\n            statement = \"Good Afternoon\";\r\n        } else if (hours >= 17 && hours < 20) {\r\n            statement = \"Good Evening\";\r\n        } else {\r\n            statement = \"Good Night\";\r\n        }\r\n\r\n        let suffix = \"hm\";\r\n        if (hours > 12) {\r\n            suffix = \"P.M\";\r\n            hours -= 12;\r\n        } else if (hours === 12) {\r\n            suffix = \"P.M\";\r\n        } else {\r\n            if (hours === 0) {\r\n                hours = 12;\r\n            }\r\n            suffix = \"A.M\";\r\n        }\r\n        let fullTime = `${hours}:${minutes} ${suffix}`;\r\n        this.setState({time: fullTime, greeting: statement})\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { date: \"date\", time: \"time\", greeting: \"greeting\" }\r\n        this.getDate = this.getDate.bind(this)\r\n        this.getTime = this.getTime.bind(this)\r\n        this.getDate()\r\n        setInterval(this.getTime, 2000)\r\n        setTimeout(this.getDate, 1000)\r\n        setInterval(this.getDate, 18000)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"dateStuff\" align=\"bottom\">\r\n                <h1 id=\"date\" align=\"center\" className=\"mainPage\">\r\n                    {this.state.date}\r\n                </h1>\r\n                <h2 id=\"time\" align=\"center\" className=\"mainPage\">\r\n                    {this.state.time}\r\n                </h2>\r\n                <h3 id=\"state\" align=\"center\" className=\"mainPage\">\r\n                    {this.state.greeting}\r\n                </h3>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport \"../App.css\";\r\n\r\nexport class QuoteComp extends React.Component {\r\n    getQuote() {\r\n        const endpoint = \"https://quotes.rest/qod\";\r\n        fetch(endpoint)\r\n            .then(\r\n                netResp => {\r\n                    if (netResp.ok) {\r\n                        return netResp.json();\r\n                    }\r\n                    throw new Error(\"Failed to get quote\");\r\n                },\r\n                error => console.log(error.message)\r\n            )\r\n            .then(jsonResp => {\r\n                console.log(jsonResp);\r\n                this.displayQuote(jsonResp);\r\n            });\r\n    }\r\n\r\n    displayQuote(response) {\r\n        let quoteObj = response;\r\n        quoteObj = quoteObj[\"contents\"];\r\n        let quoteArr = quoteObj[\"quotes\"];\r\n        if (!quoteArr.length) {\r\n            this.setState({ quote: \"Not Found\", author: \"Not Found\" });\r\n            return;\r\n        }\r\n        this.setState({ quote: quoteArr[0].quote, author: quoteArr[0].author });\r\n    }\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            quote: \"Quote\",\r\n            author: \"Author\"\r\n        };\r\n        this.getQuote = this.getQuote.bind(this);\r\n        this.displayQuote = this.displayQuote.bind(this);\r\n        setTimeout(this.getQuote, 10);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"quoteStuff\" align=\"center\">\r\n                <h3 id=\"quote\" align=\"center\" className=\"mainPage\">\r\n                    \"{this.state.quote}\"\r\n                </h3>\r\n                <h4 id=\"author\" align=\"center\" className=\"mainPage\">\r\n                    \"{this.state.author}\"\r\n                </h4>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport \"../App.css\";\r\nimport { DateComp } from \"./dateTime\";\r\nimport { QuoteComp } from \"./greetQuote\";\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst apiKey = \"5e7f67a8f96f9f072a0b0a98\";\r\nconst endpoint = \"https://reddtwalls-8176.restdb.io/rest/images\";\r\n\r\nexport class Home extends React.Component {\r\n    performSearch(event) {\r\n        const base = \"https://google.com/search?q=\";\r\n        if (event.keyCode === 13 || event.which === 13) {\r\n            let query = document.getElementById(\"searchBar\").value;\r\n            let target = base;\r\n            query.split(\" \").forEach((word, index, array) => {\r\n                if (array.length - 1 === index) {\r\n                    target += word;\r\n                } else {\r\n                    target += `${word}%20`;\r\n                }\r\n            });\r\n\r\n            window.open(target, \"_self\");\r\n        }\r\n    }\r\n\r\n    getImages() {\r\n        fetch(endpoint, {\r\n            method: \"GET\",\r\n            mode: \"cors\",\r\n            cache: \"no-cache\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                apikey: apiKey\r\n            }\r\n        })\r\n            .then(\r\n                response => {\r\n                    if (response.ok) {\r\n                        return response.json();\r\n                    }\r\n\r\n                    throw new Error(\"Failed to get image\");\r\n                },\r\n                netError => console.log(netError.message)\r\n            )\r\n            .then(jsonResponse => setTimeout(() => this.setImage(jsonResponse), 3000));\r\n    }\r\n\r\n    setImage(json) {\r\n        let images = \"\";\r\n        console.log(json);\r\n        if (!json.length) {\r\n            console.log(\"No response for images\");\r\n            return;\r\n        }\r\n\r\n        for (let i = 0; i < json.length; i++) {\r\n            let currImage = json[i];\r\n            images += currImage[\"image\"] + \" \";\r\n        }\r\n        let imageUrls = images.trim().split(\" \");\r\n\r\n        console.log(imageUrls);\r\n        const randomIndex = Math.floor(Math.random() * imageUrls.length);\r\n        const chosenUrl = imageUrls[randomIndex].includes(\"https\")\r\n            ? imageUrls[randomIndex]\r\n            : imageUrls[randomIndex].replace(\"http\", \"https\");\r\n        console.log(chosenUrl);\r\n        this.setState({ imgurl: chosenUrl });\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { imgurl: \"\" };\r\n        this.getImages = this.getImages.bind(this);\r\n        this.setImage = this.setImage.bind(this);\r\n        setTimeout(this.getImages, 10);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App\" style={{ backgroundImage: `url(${this.state.imgurl})` }}>\r\n                <br />\r\n                <DateComp />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <div className=\"searchDiv\">\r\n                    <input\r\n                        type=\"search\"\r\n                        id=\"searchBar\"\r\n                        align=\"center\"\r\n                        placeholder=\"Search...\"\r\n                        onKeyPress={this.performSearch}\r\n                    />\r\n                </div>\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <QuoteComp />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <center>\r\n                    <Link to=\"/about\" className=\"myButton\" align=\"center\">\r\n                        about\r\n                    </Link>\r\n                </center>\r\n            </div>\r\n        );\r\n    }\r\n}","import { Card } from \"react-bootstrap\";\r\nimport React from 'react';\r\n\r\nexport class ProjectCard extends React.Component {\r\n    render() {\r\n        return (\r\n            <Card style={{ width: \"18rem\", borderRadius: \"10px\" }}>\r\n                <Card.Body>\r\n                    <Card.Title>{this.props.title}</Card.Title>\r\n                    <Card.Subtitle className=\"mb-2 text-muted\">{this.props.subtitle}</Card.Subtitle>\r\n                    <Card.Text>\r\n                        {this.props.desc}\r\n                    </Card.Text>\r\n                    <Card.Link href=\"#\">Card Link</Card.Link>\r\n                    <Card.Link href=\"#\">Another Link</Card.Link>\r\n                </Card.Body>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n","import \"./About.css\";\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { ProjectCard } from './ProjectCard';\r\n\r\n//title, subtitle, desc, link, image links?\r\nconst projectFactory = (title, subtitle, desc) => {\r\n    return {\r\n        title: title,\r\n        subtitle: subtitle,\r\n        desc: desc\r\n    };\r\n}\r\nconst projectArr = [\r\n    projectFactory('Project 1', 'this is a project', 'this does stuff'),\r\n    projectFactory('Project 2', 'this is a project', 'this does stuff'),\r\n    projectFactory('Project 3', 'this is a project', 'this does stuff'),\r\n    projectFactory('Project 4', 'this is a project', 'this does stuff'),\r\n    projectFactory('Project 5', 'this is a project', 'this does stuff'),\r\n    projectFactory('Project 6', 'this is a project', 'this does stuff'),\r\n    projectFactory('Project 7', 'this is a project', 'this does stuff'),\r\n    projectFactory('Project 8', 'this is a project', 'this does stuff'),\r\n    projectFactory('Project 9', 'this is a project', 'this does stuff'),\r\n    projectFactory('Project 10', 'this is a project', 'this does stuff'),\r\n]\r\n\r\nconst getAsList = () => {\r\n    let listItems = []\r\n    for (let i = 0; i < projectArr.length; i++) {\r\n        listItems.push(<li><ProjectCard title={projectArr[i].title} subtitle={projectArr[i].subtitle} desc={projectArr[i].desc}/></li>)\r\n    }\r\n    return listItems;\r\n}\r\n\r\nexport class About extends React.Component {\r\n    render() {\r\n        console.log('got here')\r\n        return (\r\n            <div className=\"aboutPage\">\r\n                <Link to=\"/\" className=\"backButton\" align=\"center\">\r\n                    Back\r\n                </Link>\r\n\r\n                <header align=\"center\">\r\n                    <h1>Hello, my name is <strong>Mehul Pillai</strong>...</h1>\r\n                    <h2>I am an aspiring computer scientist who loves to build and solve problems.</h2>\r\n                    <h2>Check out some of my projects below</h2>\r\n                    <hr/>\r\n                </header>\r\n\r\n                <main>\r\n                    <ul align=\"center\">\r\n                        {getAsList()}\r\n                    </ul>\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\nimport \"./App.css\";\nimport { Home } from \"./entry/Home\";\nimport { About } from \"./about/About\";\nimport { Route, Switch } from 'react-router-dom';\n\nclass App extends React.Component {\n    render() {\n        return (\n            <Switch>\n                <Route path=\"/\" component={Home} exact />\n                <Route path=\"/about\" component={About}/>\n            </Switch>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}