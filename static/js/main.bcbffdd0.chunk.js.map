{"version":3,"sources":["entry/dateTime.js","Consts.js","entry/greetQuote.js","entry/weather.js","entry/Home.js","about/ProjectInfo.js","about/ProjectCard.js","about/Footer.js","about/Skills.js","about/About.js","App.js","index.js"],"names":["months","days","DateComp","props","state","date","time","greeting","getDate","bind","getTime","n","currDate","Date","year","getFullYear","month","getMonth","dayNum","day","getDay","fullDate","this","setState","hours","getHours","minutes","getMinutes","statement","suffix","fullTime","setInterval","id","align","className","React","Component","apiKey","weatherKey","weatherEndpoint","QuoteComp","quote","author","displayQuote","response","quoteObj","quoteArr","length","fetch","res","json","cardStyle","margin","borderRadius","textShadow","border","padding","width","height","descStyle","color","display","fontFamily","fontSize","toggleStyle","writable","cursor","tempStyle","textAlign","Weather","celStyle","JSON","parse","stringify","celsius","units","temperature","desc","feelsLike","cStyle","fStyle","loading","toggleUnit","loadingError","finishLoading","event","clicked","target","srcElement","innerHTML","convTemp","feels","unit","newStyle","isCelsius","toFixed","weatherInfo","console","log","weather","description","main","temp","ipRes","publicIp","method","mode","cache","headers","locRes","locationInfo","coords","lon","lat","weatherRes","style","onClick","Home","imgurl","setImage","keyCode","which","query","document","getElementById","value","split","forEach","word","index","array","window","open","images","i","imageUrls","trim","randomIndex","Math","floor","random","chosenUrl","includes","replace","apikey","backgroundImage","type","placeholder","onKeyPress","performSearch","to","textDecoration","ProjectInfo","nextImage","getAsList","featureList","info","features","listItems","push","key","currIndex","Modal","trigger","Button","Header","title","Content","image","Image","rounded","size","src","Description","alignItems","marginLeft","marginRight","ProjectCard","Card","borderColor","Body","Title","Subtitle","subtitle","Text","href","rel","footStyle","Footer","float","verticalAlign","header","card","fsize","Skills","sList","parseSkills","getSkills","setTimeout","then","ok","Error","netError","message","jsonResponse","cardList","skill","About","projectList","getProjects","parseProjects","sub","inf","feat","imgs","pList","projectArr","CardDeck","App","path","component","exact","ReactDOM","render"],"mappings":"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","file":"static/js/main.bcbffdd0.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../App.css\";\r\nconst months = [\"Jan\", \"Feb\", \"March\", \"April\", \"May\", \"June\", \"July\", \"Aug\", \"Sept\", \"Oct\", \"Nov\", \"Dec\"];\r\nconst days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\nconst getOrdinal = (n) => n + (n > 0 ? [\"th\", \"st\", \"nd\", \"rd\"][(n > 3 && n < 21) || n % 10 > 3 ? 0 : n % 10] : \"\");\r\n\r\nexport class DateComp extends React.Component {\r\n    getDate() {\r\n        const currDate = new Date();\r\n        //date\r\n        let year = currDate.getFullYear();\r\n        let month = months[currDate.getMonth()];\r\n        let dayNum = currDate.getDate();\r\n        let day = days[currDate.getDay()];\r\n        let fullDate = `${day}, ${month} ${getOrdinal(dayNum)}, ${year}`;\r\n        this.setState({ date: fullDate });\r\n    }\r\n\r\n    getTime() {\r\n        const currDate = new Date();\r\n        let hours = currDate.getHours();\r\n        let minutes = currDate.getMinutes();\r\n        if (minutes === 0) {\r\n            minutes = \"00\";\r\n        } else if (minutes < 10) {\r\n            minutes = `0${minutes}`;\r\n        }\r\n\r\n        let statement = \"hmm\";\r\n        if (hours >= 0 && hours < 12) {\r\n            statement = \"Good Morning\";\r\n        } else if (hours >= 12 && hours < 17) {\r\n            statement = \"Good Afternoon\";\r\n        } else if (hours >= 17 && hours < 20) {\r\n            statement = \"Good Evening\";\r\n        } else {\r\n            statement = \"Good Night\";\r\n        }\r\n\r\n        let suffix = \"hm\";\r\n        if (hours > 12) {\r\n            suffix = \"P.M\";\r\n            hours -= 12;\r\n        } else if (hours === 12) {\r\n            suffix = \"P.M\";\r\n        } else {\r\n            if (hours === 0) {\r\n                hours = 12;\r\n            }\r\n            suffix = \"A.M\";\r\n        }\r\n        let fullTime = `${hours}:${minutes} ${suffix}`;\r\n        this.setState({ time: fullTime, greeting: statement });\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.getDate();\r\n        this.getTime();\r\n        setInterval(this.getTime, 2000);\r\n        setInterval(this.getDate, 18000);\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { date: \"date\", time: \"time\", greeting: \"greeting\" };\r\n        this.getDate = this.getDate.bind(this);\r\n        this.getTime = this.getTime.bind(this);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"dateStuff\" align=\"bottom\">\r\n                <h1 id=\"date\" align=\"center\" className=\"mainPage\">\r\n                    {this.state.date}\r\n                </h1>\r\n                <h2 id=\"time\" align=\"center\" className=\"mainPage\">\r\n                    {this.state.time}\r\n                </h2>\r\n                <h3 id=\"state\" align=\"center\" className=\"mainPage\">\r\n                    {this.state.greeting}\r\n                </h3>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","export const apiKey = \"5e7f67a8f96f9f072a0b0a98\";\r\nexport const weatherKey = \"18a485e0392a73af8ebd07a69a33c34a\";\r\nexport const imageEndpoint = \"https://reddtwalls-8176.restdb.io/rest/images\";\r\nexport const quoteEndpoint = \"https://quotes.rest/qod\";\r\nexport const projectsEndpoint = \"https://reddtwalls-8176.restdb.io/rest/projects\";\r\nexport const skillsEndpoint = \"https://reddtwalls-8176.restdb.io/rest/skills  \";\r\nexport const locEndpoint = \"https://tools.keycdn.com/geo.json?host=\";//append ip\r\nexport const weatherEndpoint = \"https://api.openweathermap.org/data/2.5/weather?\";\r\nexport const ipEndpoint = \"https://api.ipify.org/?format=json\"\r\n//lat={lat}&lon={lon}&appid={your api key}","import React from \"react\";\r\nimport \"../App.css\";\r\nimport { quoteEndpoint } from \"../Consts\";\r\nexport class QuoteComp extends React.Component {\r\n    displayQuote(response) {\r\n        let quoteObj = response;\r\n        quoteObj = quoteObj[\"contents\"];\r\n        let quoteArr = quoteObj[\"quotes\"];\r\n        if (!quoteArr.length) {\r\n            this.setState({ quote: \"Not Found\", author: \"Not Found\" });\r\n            return;\r\n        }\r\n        this.setState({ quote: quoteArr[0].quote, author: quoteArr[0].author });\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const res = await fetch(quoteEndpoint);\r\n        this.displayQuote(await res.json());\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            quote: \"Quote\",\r\n            author: \"Author\",\r\n        };\r\n        this.displayQuote = this.displayQuote.bind(this);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"quoteStuff\" align=\"center\">\r\n                <h3 id=\"quote\" align=\"center\" className=\"mainPage\">\r\n                    \"{this.state.quote}\"\r\n                </h3>\r\n                <hr className=\"quoteRule\" />\r\n                <h4 id=\"author\" align=\"center\" className=\"mainPage\">\r\n                    <strong>{this.state.author}</strong>\r\n                </h4>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { weatherKey, locEndpoint, weatherEndpoint, ipEndpoint } from \"../Consts\";\r\nconst toggled = \"#7dc6db\";\r\n//TODO: show city?\r\nconst cardStyle = {\r\n    margin: \"0 auto\",\r\n    borderRadius: \"15px\",\r\n    textShadow: \"1px 1px 0px black\",\r\n    border: \"2px solid #D3D3D3\",\r\n    padding: \"5px\",\r\n    width: \"fit-content\",\r\n    /* To adjust the height as well */\r\n    height: \"fit-content\",\r\n};\r\n\r\nconst descStyle = {\r\n    textShadow: \"1px 1px 0px black\",\r\n    color: \"white\",\r\n    display: \"inline-block\",\r\n    fontFamily: \"Open Sans\",\r\n    margin: \"10px\",\r\n    fontSize: \"22px\",\r\n};\r\n\r\nlet toggleStyle = {\r\n    textShadow: \"1px 1px 0px black\",\r\n    writable: true,\r\n    color: \"#d4d6d9\",\r\n    fontSize: \"16px\",\r\n    display: \"inline-block\",\r\n    margin: \"5px\",\r\n    cursor: \"pointer\",\r\n};\r\n\r\nconst tempStyle = {\r\n    textShadow: \"1px 1px 0px black\",\r\n    textAlign: \"center\",\r\n    color: \"#d4d6d9\",\r\n    fontSize: \"16px\",\r\n    margin: \"10px\",\r\n    fontFamily: \"Open Sans\",\r\n};\r\n\r\nexport class Weather extends React.Component {\r\n    toggleUnit(event) {\r\n        if (this.state.loading) {\r\n            return;\r\n        }\r\n\r\n        let element = event.target ? event.target : event.srcElement;\r\n        const clicked = element.innerHTML;\r\n\r\n        let convTemp = 0;\r\n        let feels = 0;\r\n        let unit = \"\";\r\n        let newStyle = JSON.parse(JSON.stringify(toggleStyle));\r\n        newStyle.color = toggled;\r\n        let isCelsius = this.state.celsius;\r\n        if (isCelsius) {\r\n            if (clicked === \"C\") {\r\n                return;\r\n            }\r\n            //convert to Fa: (c x 9/5) + 32 = F\r\n            convTemp = (this.state.temperature * (9 / 5.0) + 32.0).toFixed(2);\r\n            feels = (this.state.feelsLike * (9.0 / 5.0) + 32.0).toFixed(2);\r\n            unit = \"F\";\r\n            isCelsius = false;\r\n        } else {\r\n            if (clicked === \"F\") {\r\n                return;\r\n            }\r\n            //convert to Cel: (F-32) x 5/9 = C\r\n            convTemp = ((this.state.temperature - 32.0) * (5.0 / 9.0)).toFixed(2);\r\n            feels = ((this.state.feelsLike - 32.0) * (5.0 / 9.0)).toFixed(2);\r\n            unit = \"C\";\r\n            isCelsius = true;\r\n        }\r\n\r\n        this.setState({\r\n            temperature: convTemp,\r\n            feelsLike: feels,\r\n            cStyle: isCelsius ? newStyle : toggleStyle,\r\n            fStyle: isCelsius ? toggleStyle : newStyle,\r\n            celsius: isCelsius,\r\n            units: unit,\r\n        });\r\n    }\r\n\r\n    finishLoading(weatherInfo) {\r\n        console.log(weatherInfo);\r\n        this.setState({\r\n            loading: false,\r\n            desc: weatherInfo.weather[0].description,\r\n            temperature: (weatherInfo.main.temp - 273.15).toFixed(2),\r\n            feelsLike: (weatherInfo.main[\"feels_like\"] - 273.15).toFixed(2),\r\n            celsius: true,\r\n            units: \"C\",\r\n        });\r\n    }\r\n\r\n    //happens because some adblockers block getting ips using the particular ajax call i use\r\n    loadingError() {\r\n        this.setState({\r\n            temperature: \"Could not load IP\",\r\n            feelsLike: \"Could not load IP\",\r\n            loading: true,\r\n            desc: \"Could not Load IP\",\r\n        });\r\n    }\r\n\r\n    //should probably do more error handling lol\r\n    async componentDidMount() {\r\n        let ipRes = {};\r\n        try {\r\n            ipRes = await fetch(ipEndpoint);\r\n        } catch (error) {\r\n            this.loadingError();\r\n            return;\r\n        }\r\n        const publicIp = (await ipRes.json())[\"ip\"];\r\n        console.log(publicIp);\r\n        const locRes = await fetch(locEndpoint + publicIp, {\r\n            method: \"GET\",\r\n            mode: \"no-cors\",\r\n            cache: \"no-cache\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n        });\r\n        const locationInfo = await locRes.json();\r\n        console.log(locationInfo);\r\n        const coords = locationInfo[\"data\"][\"geo\"];\r\n        const lon = coords[\"longitude\"];\r\n        const lat = coords[\"latitude\"];\r\n        console.log(weatherEndpoint + \"lat=\" + lat + \"&lon=\" + lon + \"&appid=\" + weatherKey);\r\n        const weatherRes = await fetch(weatherEndpoint + \"lat=\" + lat + \"&lon=\" + lon + \"&appid=\" + weatherKey);\r\n        console.log(weatherRes);\r\n        this.finishLoading(await weatherRes.json());\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        let celStyle = JSON.parse(JSON.stringify(toggleStyle));\r\n        celStyle.color = toggled;\r\n        this.state = {\r\n            celsius: true,\r\n            units: \"C\",\r\n            temperature: 12.0,\r\n            desc: \"great\",\r\n            feelsLike: 12.0,\r\n            cStyle: celStyle,\r\n            fStyle: toggleStyle,\r\n            loading: true,\r\n        };\r\n        this.toggleUnit = this.toggleUnit.bind(this);\r\n        this.loadingError = this.loadingError.bind(this);\r\n        this.finishLoading = this.finishLoading.bind(this);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={cardStyle}>\r\n                <div>\r\n                    <h4 style={descStyle}>{this.state.desc}</h4>\r\n                    <h2 style={this.state.cStyle} onClick={this.toggleUnit}>\r\n                        C\r\n                    </h2>\r\n                    <h2 style={toggleStyle}>|</h2>\r\n                    <h2 style={this.state.fStyle} onClick={this.toggleUnit}>\r\n                        F\r\n                    </h2>\r\n                </div>\r\n\r\n                <h3 style={tempStyle}>\r\n                    Temp: {this.state.temperature} {this.state.units}\r\n                </h3>\r\n                <h3 style={tempStyle}>\r\n                    Feels Like: {this.state.feelsLike} {this.state.units}\r\n                </h3>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport \"../App.css\";\r\nimport { DateComp } from \"./dateTime\";\r\nimport { QuoteComp } from \"./greetQuote\";\r\nimport { Weather } from \"./weather\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { apiKey, imageEndpoint } from \"../Consts\";\r\n\r\nexport class Home extends React.Component {\r\n    performSearch(event) {\r\n        const base = \"https://google.com/search?q=\";\r\n        if (event.keyCode === 13 || event.which === 13) {\r\n            let query = document.getElementById(\"searchBar\").value;\r\n            let target = base;\r\n            query.split(\" \").forEach((word, index, array) => {\r\n                if (array.length - 1 === index) {\r\n                    target += word;\r\n                } else {\r\n                    target += `${word}%20`;\r\n                }\r\n            });\r\n\r\n            window.open(target, \"_self\");\r\n        }\r\n    }\r\n\r\n    setImage(json) {\r\n        let images = \"\";\r\n        console.log(json);\r\n        if (!json.length) {\r\n            console.log(\"No response for images\");\r\n            return;\r\n        }\r\n\r\n        for (let i = 0; i < json.length; i++) {\r\n            let currImage = json[i];\r\n            images += currImage[\"image\"] + \" \";\r\n        }\r\n        let imageUrls = images.trim().split(\" \");\r\n\r\n        console.log(imageUrls);\r\n        const randomIndex = Math.floor(Math.random() * imageUrls.length);\r\n        const chosenUrl = imageUrls[randomIndex].includes(\"https\")\r\n            ? imageUrls[randomIndex]\r\n            : imageUrls[randomIndex].replace(\"http\", \"https\");\r\n        console.log(chosenUrl);\r\n        this.setState({\r\n            imgurl: chosenUrl,\r\n        });\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const res = await fetch(imageEndpoint, {\r\n                method: \"GET\",\r\n                mode: \"cors\",\r\n                cache: \"no-cache\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    apikey: apiKey,\r\n                },\r\n            });\r\n\r\n            this.setImage(await res.json());\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            imgurl: \"\",\r\n        };\r\n        this.setImage = this.setImage.bind(this);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div\r\n                className=\"App\"\r\n                style={{\r\n                    backgroundImage: `url(${this.state.imgurl})`,\r\n                }}\r\n            >\r\n                <br />\r\n                <DateComp />\r\n                <br />\r\n                <Weather/>\r\n                <br />\r\n                <div className=\"searchDiv\">\r\n                    <input\r\n                        type=\"search\"\r\n                        id=\"searchBar\"\r\n                        align=\"center\"\r\n                        placeholder=\"Search...\"\r\n                        onKeyPress={this.performSearch}\r\n                    />{\" \"}\r\n                </div>{\" \"}\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <QuoteComp />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <center>\r\n                    <Link\r\n                        to=\"/about\"\r\n                        className=\"myButton\"\r\n                        align=\"center\"\r\n                        style={{\r\n                            textDecoration: \"none\",\r\n                        }}\r\n                    >\r\n                        about{\" \"}\r\n                    </Link>{\" \"}\r\n                </center>{\" \"}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { Button, Header, Image, Modal } from \"semantic-ui-react\";\r\nimport \"./About.css\";\r\nexport class ProjectInfo extends React.Component {\r\n    getAsList() {\r\n        let featureList = this.props.info.features;\r\n        let listItems = [];\r\n        for (let i = 0; i < featureList.length - 1; i++) {\r\n            listItems.push(<li key={`feature_${i}`}>\"{featureList[i]}\"</li>);\r\n        }\r\n        return listItems;\r\n    }\r\n\r\n    nextImage() {\r\n        if (this.props.info.images.length === 1) {\r\n            return;\r\n        }\r\n\r\n        let currIndex = this.state.index;\r\n        if (currIndex + 1 === this.props.info.images.length) {\r\n            currIndex = 0;\r\n        } else {\r\n            currIndex++;\r\n        }\r\n\r\n        this.setState({ index: currIndex });\r\n        console.log(this.props.info.images[this.state.index])\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { index: 0 };\r\n        this.nextImage = this.nextImage.bind(this);\r\n        this.getAsList = this.getAsList.bind(this);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Modal trigger={<Button>Info</Button>} className=\"modal\">\r\n                <Modal.Header>{this.props.info.title}</Modal.Header>\r\n                <Modal.Content image>\r\n                    <Image rounded size=\"large\" src={this.props.info.images[this.state.index]} />\r\n                    <Modal.Description>\r\n                        <Header>Project Overview</Header>\r\n                        <p style={{ textAlign: \"center\" }}>{this.props.info.info}</p>\r\n                        <h2>Features</h2>\r\n                        <ul\r\n                            style={{\r\n                                textAlign: \"center\",\r\n                                alignItems: \"center\",\r\n                                marginLeft: \"auto\",\r\n                                marginRight: \"auto\",\r\n                            }}\r\n                        >\r\n                            {this.getAsList()}\r\n                        </ul>\r\n                        <button\r\n                            className=\"backButton\"\r\n                            id=\"nextButton\"\r\n                            onClick={this.nextImage}\r\n                            style={{ marginLeft: \"auto\", marginRight: \"auto\" }}\r\n                        >\r\n                            Next Image\r\n                        </button>\r\n                    </Modal.Description>\r\n                </Modal.Content>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n","import { Card } from \"react-bootstrap\";\r\nimport React from \"react\";\r\nimport { ProjectInfo } from \"./ProjectInfo\";\r\nimport \"./About.css\";\r\nexport class ProjectCard extends React.Component {\r\n    render() {\r\n        return (\r\n            <Card style={{ borderRadius: \"10px\", borderColor: \"#bfbdbf\", width: \"18em\" }}>\r\n                <Card.Body>\r\n                    <Card.Title>{this.props.title}</Card.Title>\r\n                    <Card.Subtitle className=\"mb-2 text-muted\">{this.props.subtitle}</Card.Subtitle>\r\n                    <Card.Text>{this.props.description}</Card.Text>\r\n                    <center>\r\n                        <a\r\n                            align=\"center\"\r\n                            id=\"repoLink\"\r\n                            className=\"backButton\"\r\n                            href={this.props.features[this.props.features.length - 1]}\r\n                            rel=\"noopener noreferrer\"\r\n                            target=\"_blank\"\r\n                        ></a>\r\n                    </center>\r\n                    <ProjectInfo info={this.props} />\r\n                </Card.Body>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\n\r\nconst footStyle = {\r\n    padding: \"7%\",\r\n};\r\n\r\nexport class Footer extends React.Component {\r\n    render() {\r\n        return (\r\n            <footer style={footStyle}>\r\n                <hr style={{ width: \"97%\", border: \"1px solid lightgray\" }} />\r\n                <a\r\n                    className=\"fab fa-github\"\r\n                    href=\"https://github.com/meh430\"\r\n                    rel=\"noopener noreferrer\"\r\n                    target=\"_blank\"\r\n                    style={{ float: \"left\", fontSize: \"30px\", color: \"black\", margin: \"10px\" }}\r\n                ></a>\r\n                <a\r\n                    className=\"fas fa-envelope\"\r\n                    href=\"mailto: mehulpillai30@gmail\"\r\n                    rel=\"noopener noreferrer\"\r\n                    target=\"_blank\"\r\n                    style={{ float: \"left\", fontSize: \"30px\", color: \"black\", margin: \"10px\" }}\r\n                ></a>\r\n\r\n                <h5 style={{ float: \"right\", margin: \"10px\", verticalAlign: \"center\" }}>Mehul Pillai 2020</h5>\r\n            </footer>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { skillsEndpoint, apiKey } from \"../Consts\";\r\nconst header = {\r\n    textAlign: \"center\",\r\n    margin: \"2%\",\r\n    color: \"gray\",\r\n};\r\n\r\nconst card = {\r\n    borderRadius: \"10px\",\r\n    borderColor: \"#bfbdbf\",\r\n    width: \"18em\",\r\n};\r\n\r\nconst fsize = {\r\n    fontSize: \"18px\",\r\n};\r\n\r\nexport class Skills extends React.Component {\r\n    getSkills() {\r\n        fetch(skillsEndpoint, {\r\n            method: \"GET\",\r\n            mode: \"cors\",\r\n            cache: \"no-cache\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                apikey: apiKey,\r\n            },\r\n        })\r\n            .then(\r\n                (response) => {\r\n                    if (response.ok) {\r\n                        return response.json();\r\n                    }\r\n\r\n                    throw new Error(\"Failed to get skills\");\r\n                },\r\n                (netError) => console.log(netError.message)\r\n            )\r\n            .then((jsonResponse) => setTimeout(() => this.parseSkills(jsonResponse), 1));\r\n    }\r\n\r\n    parseSkills(json) {\r\n        let cardList = [];\r\n        if (!json.length) {\r\n            console.log(\"No response for skills\");\r\n            return;\r\n        }\r\n        for (let i = 0; i < json.length; i++) {\r\n            cardList.push(\r\n                <li key={`skill_${i}`}>\r\n                    <Card style={card}>\r\n                        <Card.Body style={fsize}>{json[i].skill}</Card.Body>\r\n                    </Card>\r\n                </li>\r\n            );\r\n        }\r\n\r\n        this.setState({sList: cardList})\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { sList: [<li key={`skill_${0}`}><h3>Please Wait..</h3></li>] };\r\n        this.parseSkills = this.parseSkills.bind(this)\r\n        this.getSkills = this.getSkills.bind(this)\r\n        setTimeout(() => this.getSkills(), 1)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div align=\"center\" style={{ margin: \"3%\" }}>\r\n                <hr style={{ width: \"4%\" }} />\r\n                <h1 style={header}>Languages and Frameworks</h1>\r\n                <br />\r\n                <ul style={{ width: \"90%\" }}>{this.state.sList}</ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import \"./About.css\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ProjectCard } from \"./ProjectCard\";\r\nimport { Footer } from \"./Footer\";\r\nimport { Skills } from \"./Skills\";\r\nimport { apiKey, projectsEndpoint } from \"../Consts\";\r\nimport { CardDeck } from \"react-bootstrap\";\r\n\r\nconst projectFactory = (title, sub, desc, inf, feat, imgs) => {\r\n    return {\r\n        title: title,\r\n        subtitle: sub,\r\n        description: desc,\r\n        info: inf,\r\n        features: feat,\r\n        images: imgs,\r\n    };\r\n};\r\n\r\nexport class About extends React.Component {\r\n    getProjects() {\r\n        fetch(projectsEndpoint, {\r\n            method: \"GET\",\r\n            mode: \"cors\",\r\n            cache: \"no-cache\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                apikey: apiKey,\r\n            },\r\n        })\r\n            .then(\r\n                (response) => {\r\n                    if (response.ok) {\r\n                        return response.json();\r\n                    }\r\n\r\n                    throw new Error(\"Failed to get projects\");\r\n                },\r\n                (netError) => console.log(netError.message)\r\n            )\r\n            .then((jsonResponse) => setTimeout(() => this.parseProjects(jsonResponse), 1));\r\n    }\r\n\r\n    parseProjects(json) {\r\n        console.log(json);\r\n        if (!json.length) {\r\n            console.log(\"No response for projects\");\r\n            return;\r\n        }\r\n        let pList = [];\r\n        //title, sub, desc, inf, feat, imgs\r\n        for (let i = 0; i < json.length; i++) {\r\n            pList.push(\r\n                projectFactory(\r\n                    json[i].title,\r\n                    json[i].subtitle,\r\n                    json[i].description,\r\n                    json[i].info,\r\n                    json[i].features,\r\n                    json[i].images\r\n                )\r\n            );\r\n        }\r\n\r\n        this.setState({ projectList: pList });\r\n    }\r\n\r\n    getAsList() {\r\n        let cardList = [];\r\n        let listItems = [];\r\n        let projectArr = this.state.projectList;\r\n        if (projectArr.length === 0) {\r\n            return (\r\n                <li>\r\n                    <h3>Please Wait..</h3>\r\n                </li>\r\n            );\r\n        }\r\n\r\n        for (let i = 0; i < projectArr.length; i++) {\r\n            cardList.push(\r\n                <ProjectCard key={`card_${i}`}\r\n                        title={projectArr[i].title}\r\n                        subtitle={projectArr[i].subtitle}\r\n                        description={projectArr[i].description}\r\n                        info={projectArr[i].info}\r\n                        features={projectArr[i].features}\r\n                        images={projectArr[i].images}\r\n                    />\r\n            );\r\n\r\n            if ((i+1) % 3 === 0) {\r\n                listItems.push(\r\n                    <li key={`deck_${i}`}>\r\n                        <CardDeck>\r\n                            {cardList}\r\n                        </CardDeck>\r\n                    </li>\r\n                )\r\n\r\n                cardList = []\r\n            }\r\n        }\r\n\r\n        if (cardList.length !== 0) {\r\n            listItems.push(\r\n                <li key={'last deck'}>\r\n                    <CardDeck>\r\n                        {cardList}\r\n                    </CardDeck>\r\n                </li>\r\n            )\r\n        }\r\n        return listItems;\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { projectList: [] };\r\n        this.getProjects = this.getProjects.bind(this);\r\n        this.parseProjects = this.parseProjects.bind(this);\r\n        this.getAsList = this.getAsList.bind(this);\r\n        \r\n        setTimeout(this.getProjects, 1);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"aboutPage\">\r\n                <Link to=\"/\" className=\"backButton\" align=\"center\" style={{ textDecoration: \"none\" }}>\r\n                    Back\r\n                </Link>\r\n\r\n                <header align=\"center\">\r\n                    <h1>\r\n                        Hello, my name is <strong>Mehul Pillai</strong>...\r\n                    </h1>\r\n                    <h2>I am an aspiring computer scientist who loves to build applications and solve problems.</h2>\r\n                    <h2>Check out some of my projects below</h2>\r\n                    <hr />\r\n                </header>\r\n\r\n                <main>\r\n                    <center>\r\n                        <ul>{this.getAsList()}</ul>\r\n                    </center>\r\n                </main>\r\n                <Skills />\r\n                <Footer />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { Home } from \"./entry/Home\";\nimport { About } from \"./about/About\";\nimport { Route, Switch } from 'react-router-dom';\n\nclass App extends React.Component {\n    render() {\n        return (\n            <Switch>\n                <Route path=\"/\" component={Home} exact />\n                <Route path=\"/about\" component={About}/>\n            </Switch>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}